@using System.Collections.Generic
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@model LoginViewModel
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Log in";
}

<img class="ui centered large image" src="/images/googlykokkslogo.png" style="padding:50px 30px 30px 30px;"/>

<div class="ui one column middle aligned very relaxed stackable grid" style="position:relative">
    <div class="center aligned column">
        <h2 class="ui header centered" style="padding:5px;">Login using</h2>
        @{
            var loginProviders = SignInManager.GetExternalAuthenticationSchemes().ToList();
            if (loginProviders.Count == 0)
            {
                <div>
                    <p>
                        There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                        for details on setting up this ASP.NET application to support logging in via external services.
                    </p>
                </div>
            }
            else
            {
                <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal" role="form">
                    <div>
                        <p>
                            @foreach (var provider in loginProviders)
                            {

                                <button type="submit" class="ui huge @provider.AuthenticationScheme.ToLower() button" name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account"><i class="@provider.AuthenticationScheme.ToLower() icon"></i> @provider.AuthenticationScheme</button>
                            }
                        </p>
                    </div>
                </form>
            }
        }
    </div>
</div>



    @section Scripts {
        @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    }